function convertHTML(str) {
  // return str.split('').map(letter => {
    //     switch (letter) {
    //         case "&":
    //             return "&amp;"
    //             break
    //         case "<":
    //             return "&lt;"
    //             break
    //         case ">":
    //             return "&gt;"
    //             break
    //         case '"':
    //             return "&quot;"
    //             break
    //         case "'":
    //             return "&apos;"
    //             break
    //         default:
    //             return letter
    //             break
    //     }
    // }).join('')

    // const htmlEntities = {
    //     "&": "&amp;",
    //     "<": "&lt;",
    //     ">": "&gt;",
    //     '"': "&quot;",
    //     "'": "&apos;"
    // }
    // // Using a regex, replace characters with it's corresponding html entity
    // return str.replace(/([&<>\"'])/g, match => htmlEntities[match])

    // const htmlEntities = {
    //     "&": "&amp;",
    //     "<": "&lt;",
    //     ">": "&gt;",
    //     '"': "&quot;",
    //     "'": "&apos;"
    // }
    // return str
    //     .split("")
    //     .map(entity => htmlEntities[entity] || entity)
    //     .join("")

    // let expressions = {

    //     "&": "&amp;",
    //     "<": "&lt;",
    //     ">": "&gt;",
    //     "\"": "&quot;",
    //     "\'": "&apos;"
    // }
    // for (let i in expressions) str = str.replace(new RegExp(i, 'g'), expressions[i])
    // return str

    // return str.split("").map(entity => Object({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&apos;" })[entity] || entity).join("")

    return str.replace(/([&<>\"'])/g, match => Object({ "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&apos;" })[match])
}

convertHTML("Dolce & Gabbana");