// function recursive([start, end]) {
//   return start !== end
//    ? start + sumAll([ start + 1, end ])
//    : start;
// }

function sumAll(arr) {
  // arr.sort((a, b) => a === b ? 0 : a < b ? -1 : 1)
  // let sum = 0
  // for (let i = arr[0]; i <= arr[1]; i++) {
  //   sum += i
  // }
  // return sum;

  return ((arr[0] + arr[1]) * (Math.abs(arr[0] - arr[1]) + 1)) / 2
  
  // const step = arr[0] - arr[1] < 0 ? 1 : -1;
  // return arr[0] !== arr[1]
  //  ? arr[0] + sumAll([ arr[0] + step, arr[1] ])
  //  : arr[0];

  // arr.sort((a, b) => a === b ? 0 : a < b ? -1 : 1)
  // return recursive(arr)
}
console.log(sumAll([1, 4]))